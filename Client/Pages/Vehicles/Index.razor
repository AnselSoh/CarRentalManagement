@page "/vehicles/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class=" card-title">Car vehicles</h3>
@if (vehicles == null)
{
    <div class="alert alert-info">Loading vehicles...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Make</th>
                <th>Model</th>
                <th>Year</th>
                <th>License Plate Number</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vehicle in vehicles)
            {
            <tr>
                <td>@vehicle.Make.Name</td>
                <td>@vehicle.Model.Name</td>
                <td>@vehicle.Year</td>
                <td>@vehicle.LicensePlateNumber </td>
            </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<Vehicle> vehicles;

    protected async override Task OnInitializedAsync()
    {
        vehicles = await _client.GetFromJsonAsync<List<Vehicle>>("api/vehicles");
    }
    async Task Delete(int vehicleId)
    {
        var vehicle = vehicles.First(q => q.Id == vehicleId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {vehicle.LicensePlateNumber}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.VehiclesEndpoint}/{vehicleId}");
            await OnInitializedAsync();
        }
    }
}